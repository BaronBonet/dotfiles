goland .
git status
git diff
gl
git commit -am "bug: don't panic when no targets are extracted"
git push
l
l
codeartifact
aws sso login --profile development-admin
codeartifact
l
export AWS_PROFILE=development-admin
codeartifact
codeartifact
poetry install
cd infra
poetry install
poetry update
l
git status
git status
git commit -a --amend
vim ../Makefile
git push --force-with-lease
make build
cd ..
make build
make build
git status
git push --force-with-lease
vim .github/workflows/deploy-dev.yml
vim .github/workflows/deploy-service-dev.yml
git commit -a --amend
git push --force-with-lease
cd track-proto
git checkout main
git pull
cd ..
git status
git commit -a --amend
git push --force-with-lease
curl -X GET â€ƒ¼http://track-metric-and-kpi-service.atlas:18090/api/metrics/metadataâ€ƒ½\

curl -X GET â€ƒ¼http://localhost:18090/api/metrics/metadataâ€ƒ½\

curl -X GET â€ƒ¼http://localhost:18090/api/metrics/metadataâ€ƒ½\

git checkout main
git pull
git pull
git checkout -
git rebase -i main
git diff
git commit -a --amend
git push --force-with-lease
gl
vim .github/workflows/deploy-service-dev.yml
git diff
git commit -a --amend
git push --force-with-lease
git pull
git status
 git checkout main
git pull
gl
connect-to-dev-db
lsof -i:5432
kill $(lsof -t -i :5432)
connect-to-dev-kpi-db
ssh dev-stepstone
connect-to-dev-kpi-db
exit
l
cd python-tutorial
touch greeter_client.py
mkdir protos
mv hello.proto protos
touch Readme.md
l
touch buf.gen.yaml
touch buf.work.yaml
l
cd protos/hello_api
buf init
buf --help
buf mod .
buf mod
buf mod init
buf mod update
cd ..
cd ..
buf generated
buf generate
buf generate
buf generate
buf generate
buf generate
buf generate
buf generate
buf generate
buf generate
l
l
buf generate
l
python greeter_server.py
python greeter_server.py
buf generate
buf generate
python greeter_server.py
python -m grpc_tools.protoc -I ./protos/hello_api --python_out=generated --grpc_python_out=generated hello.proto
python -m grpc_tools.protoc -I ./protos/hello_api --python_out=generated --grpc_python_out=generated hello/v1/hello.proto
python -m grpc_tools.protoc -I ./protos/hello_api --python_out=generated --grpc_python_out=generated hello/v1/hello.proto
python -m grpc_tools.protoc --proto_path ./protos/hello_api --python_out=generated --grpc_python_out=generated hello/v1/hello.proto
python -m grpc_tools.protoc --proto_path ./protos/hello_api --python_out=generated --grpc_python_out=generated hello/v1/hello.proto
python -m grpc_tools.protoc --proto_path ./protos/hello_api --python_out=generated --grpc_python_out=generated hello
python -m grpc_tools.protoc --proto_path ./protos/hello_api --python_out=generated --grpc_python_out=generated hello/
python -m grpc_tools.protoc --proto_path ./protos/hello_api --python_out=generated --grpc_python_out=generated hello/v1/hello.proto
buf generate
python greeter_server.py
python -m grpc_tools.protoc --proto_path ./protos/hello_api --python_out=.  --grpc_python_out=. --pyi_out=. hello/v1/hello.proto
python greeter_server.py
buf generate
buf generate
buf generate
buf generate
buf generate
python greeter_server.py
buf generate
python greeter_server.py
python greeter_server.py
python greeter_server.py
python greeter_server.py
python -m grpc_tools.protoc --proto_path gen=./protos/hello_api --python_out=.  --grpc_python_out=. --pyi_out=. hello/v1/hello.proto
python -m grpc_tools.protoc -I gen=./protos/hello_api --python_out=.  --grpc_python_out=. --pyi_out=. hello/v1/hello.proto
python -m grpc_tools.protoc -I ./protos/hello_api --python_out=.  --grpc_python_out=. --pyi_out=. hello/v1/hello.proto
python -m grpc_tools.protoc -I ./protos/hello_api --python_out=gen  --grpc_python_out=gen hello/v1/hello.proto
python -m grpc_tools.protoc -I gen=./protos/hello_api/ --python_out=gen  --grpc_python_out=gen hello/v1/hello.proto
python -m grpc_tools.protoc -I gen=./protos/hello_api/hello/v1 --python_out=gen  --grpc_python_out=gen hello.proto
python -m grpc_tools.protoc -I gen=./protos/hello_api/hello/v1/ --python_out=gen  --grpc_python_out=gen hello.proto
python -m grpc_tools.protoc -I gen=./protos/hello_api/hello/v1/hello.proto --python_out=gen  --grpc_python_out=gen hello.proto
python -m grpc_tools.protoc -I gen=./protos/hello_api/hello/v1/hello.proto --python_out=gen  --grpc_python_out=gen ./protos/hello_api/hello/v1/hello.proto 
python -m grpc_tools.protoc -I gen=./protos/hello_api/hello/v1/hello.proto --python_out=gen  --grpc_python_out=gen protos/hello_api/hello/v1/hello.proto 
python -m grpc_tools.protoc -I gen=./protos/hello_api/hello/v1/hello.proto --python_out=gen  protos/hello_api/hello/v1/hello.proto 
python -m grpc_tools.protoc -I gen=./protos/hello_api/hello/v1/hello.proto --python_out=gen  protos/hello_api/hello/v1/hello.proto 
mkdir gen
python -m grpc_tools.protoc -I gen=./protos/hello_api/hello/v1/hello.proto --python_out=gen  protos/hello_api/hello/v1/hello.proto 
python -m grpc_tools.protoc -I gen=./protos/hello_api/hello/v1/hello.proto --python_out=gen --gprc_python_out=gen protos/hello_api/hello/v1/hello.proto 
python -m grpc_tools.protoc -I gen=./protos/hello_api/hello/v1/hello.proto --python_out=gen --grpc_python_out=gen protos/hello_api/hello/v1/hello.proto 
python -m grpc_tools.protoc -I gen=./protos/hello_api/hello/v1/hello.proto --python_out=gen --grpc_python_out=gen/hello.proto protos/hello_api/hello/v1/hello.proto 
python -m grpc_tools.protoc -I gen=./protos/hello_api/hello/v1/hello.proto --python_out=gen --grpc_python_out=hello.proto protos/hello_api/hello/v1/hello.proto 
python -m grpc_tools.protoc -I gen=./protos/hello_api/hello/v1/hello.proto --python_out=hello.proto --grpc_python_out=hello.proto protos/hello_api/hello/v1/hello.proto 
buf generate
touch .gitignore
buf generate
git init .
buf generate
mkdir .github
mkdir .github/workflows
touch .github/workflows/ci.yml
git status
git add .
 git status
git commit -am "initial commit"
git remote add origin git@github.com:BaronBonet/example-buf-python.git
git push -u origin main
git commit -a --amend
git push --force-with-lease
git commit -a --amend
git push --force-with-lease
git commit -a --amend
git push --force-with-lease
kl
l
touch Dockerfile
mkdir app
python app/greeter_server.py
python app
python app
buf generate
python app
docker build .
docker build .
docker build .
buf generate
git status
docker build .
docker build .
docker build .
docker build .
docker build .
docker build .
docker build .
docker build .
l
l
l
docker build .
docker build .
docker build .
docker build .
docker build .
docker build .
git status
git status
buf generate
git status
vim .gitignore
vim .gitignore
git status
git add .
git commit -a --amend
git push --force-with-lease
git status
git commit -a --amend
git push --force-with-lease
git commit -a --amend
git push --force-with-lease
exit
tmux
tmux
buf generate
cd ../hasura_action_handlers/function
buf generate
poetry add grpc
aws sso login --profile development-admin
aws sso login --profile development-admin
codeartifact
export AWS_PROFILE=development-admin
codeartifact
poetry add grpc
git status
black api/controllers/kpis.py
buf generate
cd random/learn
cd random/learning
mkdir grpc-python
cd grpc-python
git clone -b v1.50.0 --depth 1 --shallow-submodules https://github.com/grpc/grpc
dsl
ll
l
cd grpc
l
cd examples/python/route_guide
l
cd ~/random/learning/grpc-python
l
mkdir python-tutorial
cd python-tutorial
venv virtualenv grpc-python
pyenv virtualenv grpc-python
pyenv local grpc-python
l
poetry install grpcio-tools
poetry init .
poetry init 
l
poetry install
l
vim hello.proto
python -m grpc_tools.protoc -I hello.proto --python_out=. --pyi_out=. --grpc_python_out=. hello.proto
cd ../grpc/examples/python/helloworld
l
c README.md
python -m grpc_tools.protoc -I../../protos --python_out=. --pyi_out=. --grpc_python_out=. ../../protos/helloworld.proto\

cd ../../../..
l
mv python-tutorial/.python-version .
poetry add grpcio-tools
mv python-tutorial/poetry.lock .
mv python-tutorial/pyproject.toml .
l
poetry add grpcio-tools
l
cd python-tutorial
l
python -m grpc_tools.protoc -I hello.proto --python_out=. --pyi_out=. --grpc_python_out=. hello.proto
python -m grpc_tools.protoc --python_out=. --pyi_out=. --grpc_python_out=. hello.proto
python -m grpc_tools.protoc -I . --python_out=. --pyi_out=. --grpc_python_out=. hello.proto
vim hello.proto
python -m grpc_tools.protoc -I . --python_out=. --pyi_out=. --grpc_python_out=. hello.proto
l
vim hello_pb2.py
vim hello_pb2.pyi
vim hello_pb2_grpc.py
cd ..
charm .
python -m grpc_tools.protoc -I protos --python_out=. --pyi_out=. --grpc_python_out=. hello.proto
python -m grpc_tools.protoc -I ./protos --python_out=. --pyi_out=. --grpc_python_out=. hello.proto
cd python-tutorial
python -m grpc_tools.protoc -I ./protos --python_out=. --pyi_out=. --grpc_python_out=. hello.proto
python -m grpc_tools.protoc -I ./protos --python_out=generated --pyi_out=generated --grpc_python_out=generated hello.proto
mkdir generated
python -m grpc_tools.protoc -I ./protos --python_out=generated --pyi_out=generated --grpc_python_out=generated hello.proto
buf generate
l
cd hasura_action_handlers
l
cd function
l
git submodule add git@github.com:source-ag/track-proto.git
git status
touch buf.gen.yaml
touch buf.work.yaml
vim buf.work.yaml
vim buf.gen.yaml
buf generate
l
l generated
l generated/metrics
l
l generated/metrics/v1
cd ..
l
cd function
vim buf.gen.yaml
l
rm -r generated
buf generate
vim buf.gen.yaml
buf generate
vim generated/metrics/v1/metrics_domain_pb2.py
vim generated/metrics/v1/metrics_service_pb2.py
vim buf.gen.yaml
buf generate
vim generated/metrics/v1/metrics_service_pb2.py
poetry add grpc
brew install poetry
export PATH="$HOME/.poetry/bin:$PATH"
poetry add grpc
poetry add grpcio
poetry add grpcio-tools
poetry add google-api-python-client
l
invoke start-db
lsof -i:5432
kill $(lsof -t -i :5432)
lsof -i:5432
kill $(lsof -t -i :5432)
lsof -i:5432
lsof -i:5432
kill $(lsof -t -i :5432)
lsof -i:5432
kill -f $(lsof -t -i :5432)
psql --host=localhost --port 5432 --username postgres --dbname source_db
l
c README.md
l
invoke start-db
lsof -i:5432
kill $(lsof -t -i :5432)
lsof -i:5432
kill $(lsof -t -i :5432)
lsof -i:5432
lsof -i:5432
kill $(lsof -t -i :5432)
lsof -i:5432
kill -f $(lsof -t -i :5432)
psql --host=localhost --port 5432 --username postgres --dbname source_db
cd ..
c README.md
psql --host=localhost --port 5432 --username postgres --dbname track_metrics_db
psql --host=localhost --port 5432 --username postgres --dbname track_metrics_db
psql --host=localhost --port 5432 --username postgres --dbname track_metrics_db
git status
git diff
git reset head --hard
l
c track-proto/cultivation_strategy_service/cultivation_strategy/v1/cultivation_strategy_domain.proto
l
vim docker-compose.yaml
hasura metadata apply
hasura console
invoke fix-sequences
export AWS_PROFILE=development-admin
invoke fix-users
aws sso login --profile development-admin
aws sso login --profile development-admin
export AWS_PROFILE=development-admin
invoke download-db-dump
aws sso login --profile prod-admin
export AWS_PROFILE=prod-admin
invoke download-db-dump
aws sso login --profile development-admin
export AWS_PROFILE=development-admin
connect-to-dev-db
connect-to-dev-db
sudo  shutdown -r now
docker compose down && docker compose up --build
vim
hasura metadata apply
hasura console
cd ..
cd ..
charm .
cd hasura
l
./docker-run.sh
./docker-run.sh
./docker-run.sh
./docker-run.sh
invoke start-db
invoke start-db
invoke start-db
kill -f $(lsof -t -i :5432)
kill  $(lsof -t -i :5432)
connect-to-dev-db
connect-to-dev-db
exit
invoke start-db
exit
exit
l
cd track-proto
l
git pull
git checkout feat/common-protos
cd ..
buf generate
cd track-proto/track_common
buf mod update
buf generate
cd ..
cd ..
buf generate
buf generate
buf generate
cd track-proto/cultivation_strategy_service
buf mod update
cd ../..
buf generate
buf generate
cd track-proto/cultivation_strategy_service
buf mod update
cd ../..
buf g
buf generated
buf generat
buf generate
cd track-proto/cultivation_strategy_service
buf mod update
cd ../..
buf generate
cd track-proto/track_common
buf generate
buf mod update
cd ../..
buf generate
cd track-proto/cultivation_strategy_service
buf generate
buf mod update
cd ../.
cd ..
buf generate
buf generate
buf generate
buf generate
cd track-proto/cultivation_strategy_service
buf mod update
cd ../..
buf generate
cd track-proto/metrics_and_kpi_service
cd lambda_domain
buf mod update
buf mod update
cd ..
 cd ..
cd ..
buf generate
cd track-proto
git status
git add .
git commit -am "feat: common"
git push
git checkout main
cd ..
buf generate
vim buf.work.yaml
buf generate

tmux
black api/controllers/kpis.py
black api/controllers/kpis.py
black api/controllers/kpis.py
git status
git status
git add .
git commit -am "wip: daily kpis from metric service"
poetry add --dev types-protobuf
aws sso login --profile development-admin
aws sso login --profile development-admin
export AWS_PROFILE=development-admin
codeartifact
poetry add --dev types-protobuf
git commit -am "wip: daily kpis from metric service"
poetry run mypy --install-types
git commit -am "wip: daily kpis from metric service"
python3 -m pip install types-protobuf
git commit -am "wip: daily kpis from metric service"
git commit -am "wip: daily kpis from metric service" -n
git push 
git status
git commit -am "wip: conditionally adding fields"
git commit -am "wip: conditionally adding fields" -n
git push
sudo  shutdown -r now
docker compose down && docker compose up --build
docker compose down && docker compose up --build
docker compose down && docker compose up --build
docker compose down && docker compose up --build
docker compose down && docker compose up --build
l
c .env.local
cd hasura
./docker-run.sh
l
vim docker-run.sh
./docker-run.sh
vim docker-run.sh
./docker-run.sh
vim docker-run.sh
vim docker/Dockerfile
vim docker/entrypoint.sh
l
c README.md
export AWS_PROFILE=prod-admin
aws sso login --profile prod-admin
aws sso login --profile prod-admin
invoke refresh-db
mv ~/.pgpass ~/.pgpass-t
invoke migrate-db
l
invoke load_db_dump
l
vim tasks.py
invoke load_db_dump
invoke fix-sequences
l
vim .pgpass
invoke load_db_dump
aws sso login --profile prod-admin
aws sso login --profile prod-admin
export AWS_PROFILE=prod-admin
invoke refresh-db
l
vim .pgpass
l
charm .
git status
git diff
goland .
git status
git diff
git commit -am "bug: return empty response when no targets are extracted"
git push
vim
docker compose down && docker compose up --build
docker compose down && docker compose up --build
docker compose down && docker compose up --build
docker compose down && docker compose up --build
git status
git diff
git status
gl
gl
git stash
git checkout main
git pull
git checkout -
git diff
git stash pop
git diff
git commit -am "feat: returning proper gRPC status codes"
git push
git push -u origin feat/changes-for-connecting-with-action-handlers
git status
git diff
git checkout -b chore/change-decimals
git commit -am "chore: change decimal places"
git push
git push -u origin chore/change-decimals
git checkout main
git pull
git status
git checkout -b feat/changes-for-connecting-with-action-handlers
aws sso login --profile development-admin
aws sso login --profile development-admin
aws sso login --profile development-admin
export AWS_PROFILE=development-admin
connect-to-dev-db
lsof -i:5432
kill  $(lsof -t -i :5432)
psql --host=localhost --port 5432 --username postgres --dbname source_db
psql --host=localhost --port 5432 --username postgres --dbname source_db --password admin
rm ~/.pgpass
vim ~/.pgpass
cd ~/source_software/atlas-data-models
bind -P
printf "\033c"\

hi
reset
hi
vim ~/.config/.aliases
source ~/.config/.aliases
vim ~/.config/.aliases
source ~/.config/.aliases
type -a clear
clear
vim ~/.config/.aliases
cl
invoke start-db
exit
git status
buf generate
buf generate
buf generate
buf generate
git stash
buf generate
buf generate
buf generate
buf generate
buf generate
git status
git status
buf generate
git status
buf generate
buf generate
l
git status
git status
docker build
docker build .
docker build .
docker build .
git status
git status
cd ../..
git status
git add .
gl
git commit -am "feat: minor changes to infra and generated code"
git commit -am "feat: minor changes to infra and generated code"
git commit -am "feat: minor changes to infra and generated code" -n
git push --force-with-lease
cd hasura_action_handlers/function
l
cd track-proto
git checkout main
git pull
cd ..
git status
git commit -a --amend
git push --force-with-lease
pytest .
git status
git commit -a --amend
git push --force-with-lease
git checkout main
git pull
git checkout -
git rebase -i main
git push --force-with-lease
git status
git status
git commit -a --amend
git status
cd ../..
git commit -a --amend
git push --force-with-lease
cd hasura_action_handlers/function
cd track-proto
l
buf generate
git status
cd ..
 git status
git add .
cd ../..
git status
git status
git submodule add git@github.com:source-ag/track-proto.git hasura_action_handlers/function/track_proto
git rm hasura_action_handlers/function/track_proto
git status
git submodule add git@github.com:source-ag/track-proto.git hasura_action_handlers/function/track_proto
git status
git status
git diff
git status
git add .
git status
git submodule add git@github.com:source-ag/track-proto.git hasura_action_handlers/function/track_proto
git status
git submodule remove
git rm --cached hasura_action_handlers/function/track-proto
git status
rm -r hasura_action_handlers/function/track-proto
git status
git add .
git status
l
git status
git add .
git status
cd hasura_action_handlers/function
rm buf.gen.yaml
rm buf.work.yaml
cd track_proto
buf generate
git status
git checkout -b feat/added-python-stubs
git status
git add .
git commit -am "feat: added python generated files"
git push
git push -u origin feat/added-python-stubs
cd ../..
git status
git add .
git status
git add ../.
git status
git status
git add .
git status
git commit -a --amend
git commit -a --amend -n
git push --force-with-lease
cd track_proto
l
cd function
cd track_proto
git status
git checkout main
git pull
cd ..
git status
git commit -a --amend -n
git status
cd ../..
git status
git commit -a --amend -n
git push --force-with-lease
git status
git add .
git commit -a --amend 
git push --force-with-lease
cd hasura_action_handlers/function
poetry run pytest
cd track_proto
git stash
git status
git status
cd ..
cd track_proto
git status
;
l
vim .gitignore
git status
git checkout -b chore/removing-broken-imports
git commit -am "chore: remove broken python imports"
cd ..
pytest .
pytest .
git status
git add .
 git commit -a --amend
 git commit -a --amend
 git commit -a --amend
 git commit -a --amend
 git commit -a --amend -n
git push --force-with-lease
git status
cd track_proto
git status
git log
git commit -a --amend 
git push --force-with-lease
gl
git push -u origin chore/removing-broken-imports
buf generate
git status
git add .
git commit -a --amend 
git push --force-with-lease
cd ..
git status
git commit -a --amend 
git push --force-with-lease
pytest .
pytest .
git log
git diff 897
git diff 8978f
git status
cp track_proto/buf.gen.yaml .
cp track_proto/buf.work.yaml
cp track_proto/buf.work.yaml .
l
cd ../..
;
l
git submodule add git@github.com:source-ag/track-proto.git 
git status
cd hasura_action_handlers/function
git status
buf generate
git status
git status
buf generate
pytest .
git status
git add .
git commit -a --amend 
git commit -a --amend 
git commit -a --amend -n
git push --force-with-lease
cd ../..
l
git submodule add git@github.com:source-ag/track-proto.git 
git status
git add .
git commit -am "chore: changed git submodule"
git commit -am "chore: changed git submodule"
git submodule add git@github.com:source-ag/track-proto.git 
git submodule add git@github.com:source-ag/track-proto.git hasura_action_handlers/function/track-proto
git status
git rm --cached hasura_action_handlers/function/track_proto
cd hasura_action_handlers/function
cd track_proto
cd track-proto
git status
l
cd ../../..
git status
git rm .gitmodules
git rm .gitmodules -f
git status
git rm hasura_action_handlers/function/track_proto
git rm hasura_action_handlers/function/track_proto -f
git rm ../../../../../hasura_action_handlers/function/track_proto \

git status
git reset head --hard
git status
git rm hasura_action_handlers/function/track_proto
git rm track-proto
git status
cd hasura_action_handlers/function/track-proto
git status
cd ..
rm -r track-proto
cd ../../..
cd atlas-
cd atlas-backend
git status
git submodule add git@github.com:source-ag/track-proto.git hasura_action_handlers/function/track-proto
git submodule add git@github.com:source-ag/track-proto.git hasura_action_handlers/function/track-proto -f
git submodule add -f git@github.com:source-ag/track-proto.git hasura_action_handlers/function/track-proto 
git status
git status
gl
git commit -am "chore: changed git submodule"
git push
cd hasura_action_handlers/function/track-proto
git status
gl
l
git pull
l
git pull
cd ..
git status
git commit -a --amend 
git push --force-with-lease
cd track-proto
git pull
cd track-proto
git checkout feat/common-protos
git pull 
cd ..
buf generate
buf generate
buf generate
buf generate
buf generate
buf generate
buf generate
buf generate
buf generate
buf generate
buf generate
buf generate
buf generate
buf generate
buf generate
buf generate
buf generate
buf generate
buf generate
cd track-proto
buf generate
git status
buf generate
cd ..
buf generate
buf generate
buf generate
buf generate
cd track-proto
git status
cd ../lambdas/track-proto
git checkout feat/common-protos
cd ..
buf generate
cd track-proto
git pull
cd ..
buf generate
buf generate
buf generate
buf generate
buf generate
buf generate
buf generate
buf generate
buf generate
buf generate
buf generate
cd track-proto
gl
git rebase -i  7365400
gl
git push --force-with-lease
cd ..
poetry add protobuf
aws sso login --profile development-admin
export AWS_PROFILE=development-admin
codeartifact
poetry add protobuf
git status
git add .
git commit -am "chore: upgraded protobuf"
git push 
buf generate
buf generate
git status
git commit -a --amend 
git commit -a --amend 
git push --force-with-lease
buf generate
git status
cd track-proto
git status
l
git checkout -b chore/added_field_behavior
git commit -am "chore: added field behavior"
git push
git push -u origin chore/added_field_behavior
buf generate
docker build .
docker build .
docker build .
docker build .
docker build .
docker build . --name hi
docker build . --tag hi
docker run hi
docker run hi -p 50051:50051
docker run hi --port 50051:50051
docker build . --tag hi
docker run hi
docker build . --tag hi
docker run hi
git status
git status
git commit -a --amend
git push --force-with-lease
vim ~/.pgpass
vim ~/.pgpass-t
vim ~/.pgpass
cp ~/.pgpass-t ~/.pgpass
exit
aws sso login --profile development-admin
export AWS_PROFILE=development-admin
connect-to-dev-db
exit
tmux
exit
git checkout feat/common-protos
git checkout main
git pull
gl
git pull
kill  $(lsof -t -i :8080)
docker compose up
tmux
python
exit
tmux
